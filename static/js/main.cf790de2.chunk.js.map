{"version":3,"sources":["assets/popcorn.png","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["MyHeader","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","term","query","encodeURIComponent","id","append_to_response","page","tvApi","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Message","text","Contaienr","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setError","setLoading","useEffect","a","data","results","fetchData","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","setTopRated","setAiringToday","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","setMovieResults","setTvResults","setSearchTerm","searchByTerm","e","preventDefault","target","Content","Cover","bgImage","Backdrop","Data","h1","ItemContainer","IMDB","Divider","Overview","p","Video","VideoContainer","len","CompaniesContainer","BottomBorderedTitle","Productions","CompanyLogo","logoUrl","Reviews","Reviewer","ReviewContent","DetailPresenter","reviews","result","backdrop_path","runtime","episode_run_time","href","imdb_id","genres","genre","index","name","production_countries","item","overview","production_companies","logo_path","videos","video","src","key","frameBorder","allow","allowFullScreen","author","content","DetailContainer","includes","setResult","setReviews","match","push","history","parsedId","parseInt","isNaN","console","log","reactRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf790de2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/popcorn.b0227c64.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst MyHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${(props) => (props.current ? \"yellow\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n  &:hover {\n    border-bottom: 3px solid ${(props) => (!props.current ? \"gray\" : \"yellow\")};\n  }\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <MyHeader>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Home</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </MyHeader>\n  );\n};\n\nexport default withRouter(Header);\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"077990068b6dd97e94e25a6da056562a\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: { query: encodeURIComponent(term) },\n    }),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  movieReviews: (id) =>\n    api.get(`movie/${id}/reviews`, {\n      params: {\n        page: 1,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: { query: encodeURIComponent(term) },\n    }),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 10px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 15px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <span role=\"img\" aria-label=\"Loading\">\n        ⏰\n      </span>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-size: 25px;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Contaienr = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  background-image: url(${(props) => props.bgUrl});\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 2px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Contaienr>\n      <ImageContainer>\n        <Image\n          bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/popcorn.png\").default}\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title && title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Contaienr>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  //   imageUrl: PropTypes.imageUrl.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <>\n        <Helmet>\n          <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nconst HomeContainer = () => {\n  // states\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [upcoming, setUpcoming] = useState([]);\n  const [popular, setPopular] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results: nowPlaying },\n        } = await moviesApi.nowPlaying();\n        const {\n          data: { results: upcoming },\n        } = await moviesApi.upcoming();\n        const {\n          data: { results: popular },\n        } = await moviesApi.popular();\n\n        setNowPlaying(nowPlaying);\n        setUpcoming(upcoming);\n        setPopular(popular);\n      } catch {\n        setError(\"Can't find Movie information\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <>\n        <Helmet>\n          <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#ff00ff\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React, { useState, useEffect } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nconst TVContainer = () => {\n  // states\n  const [topRated, setTopRated] = useState([]);\n  const [popular, setPopular] = useState([]);\n  const [airingToday, setAiringToday] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results: topRated },\n        } = await tvApi.topRated();\n        const {\n          data: { results: popular },\n        } = await tvApi.popular();\n        const {\n          data: { results: airingToday },\n        } = await tvApi.airingToday();\n\n        setTopRated(topRated);\n        setPopular(popular);\n        setAiringToday(airingToday);\n      } catch {\n        setError(\"Can't find TV Show information\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />\n  );\n};\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, error, loading, searchTerm, handleSubmit, updateTerm }) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <>\n        <Helmet>\n          <title>Loading | Nomflix</title>\n        </Helmet>\n        <Loader />\n      </>\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                isMovie={false}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && tvResults.length < 1 && movieResults < 1 && (\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\n        )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nconst SearchContainer = () => {\n  // states\n  const [movieResults, setMovieResults] = useState([]);\n  const [tvResults, setTvResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  let handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm !== \"\") {\n      searchByTerm(searchTerm);\n    }\n  };\n\n  let updateTerm = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setSearchTerm(value);\n  };\n\n  let searchByTerm = async (term) => {\n    setLoading(true);\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(term);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(term);\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n    } catch {\n      setError(\"Can't find results\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      error={error}\n      loading={loading}\n      handleSubmit={handleSubmit}\n      updateTerm={updateTerm}\n    />\n  );\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 50px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 20vw;\n  height: 50vh;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  z-index: 1;\n  border-radius: 5px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 10px 20px 10px 0;\n`;\n\nconst Item = styled.span``;\n\nconst IMDB = styled.a`\n  background-color: #f5c518;\n  border-radius: 5px;\n  border: 1px solid black;\n  color: black;\n  font-size: 1px;\n  font-weight: 600;\n  padding: 2px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.3;\n  width: 100%;\n`;\n\nconst Video = styled.div`\n  margin: 20px 20px 0 0;\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  display: flex;\n  /* flex-wrap: wrap; */\n  overflow: ${(props) => (props.len > 2 ? \"scroll\" : \"none\")};\n  &::-webkit-scrollbar {\n    /* 세로 스크롤 넓이 */\n    width: 0px;\n    /* 가로 스크롤 높이 */\n    height: 7px;\n\n    border-radius: 6px;\n    background: rgba(255, 255, 255, 0.5);\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.7);\n    border-radius: 6px;\n  }\n`;\nconst CompaniesContainer = styled.div`\n  margin-top: 40px;\n  z-index: 2;\n  width: 100%;\n  /* height: 20%; */\n  flex-direction: column;\n`;\n\nconst BottomBorderedTitle = styled.span`\n  font-size: 24px;\n  border-bottom: 2px solid #f5c518;\n  padding-bottom: 2px;\n`;\n\nconst Productions = styled.div`\n  display: flex;\n  /* margin-top: 5px; */\n`;\n\nconst CompanyLogo = styled.div`\n  width: 15vw;\n  height: 15vh;\n  margin-right: 20px;\n  background-image: url(${(props) => `https://image.tmdb.org/t/p/w300${props.logoUrl}`});\n  background-size: 70%;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n\nconst Reviews = styled.div`\n  position: relative;\n  font-size: 13px;\n  top: 50px;\n`;\n\nconst Reviewer = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  margin: 20px 0 10px 0px;\n`;\n\nconst ReviewContent = styled.p`\n  opacity: 0.7;\n  margin-bottom: 30px;\n`;\n\nconst DetailPresenter = ({ reviews, result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message color=\"#ff00ff\" text=\"Can't find Detail Information\" />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_name ? `${result.original_name} | Nomflix` : `${result.original_title} | Nomflix`}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={\n          result.backdrop_path\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : require(\"../../assets/popcorn.png\").default\n        }\n      ></Backdrop>\n      <Content>\n        <Cover\n          key={result.id}\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/popcorn.png\").default\n          }\n        />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date}</Item>\n            <Divider>●</Divider>\n            <Item>{result.runtime ? result.runtime : result.episode_run_time} min</Item>\n            <Divider>●</Divider>\n            {/* <IMDB> */}\n            <IMDB href={`https://www.imdb.com/title/${result.imdb_id}/`} target=\"_blank\">\n              IMDB\n            </IMDB>\n            {/* </IMDB> */}\n            <Divider>●</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>●</Divider>\n\n            {result.production_countries &&\n              result.production_countries.length > 0 &&\n              result.production_countries.map((item, index) => <span>{item.name}</span>)}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {result.production_companies && result.production_companies.length && result.production_companies.length > 2 && (\n            <CompaniesContainer>\n              <BottomBorderedTitle>Companies</BottomBorderedTitle>\n              <Productions>\n                {result.production_companies &&\n                  result.production_companies.length > 1 &&\n                  result.production_companies.map((item, index) => {\n                    if (item.logo_path !== null && index < 4) {\n                      return <CompanyLogo key={item.id} logoUrl={item.logo_path}></CompanyLogo>;\n                    }\n                  })}\n              </Productions>\n            </CompaniesContainer>\n          )}\n\n          {result.videos && result.videos.results && result.videos.results.length >= 1 && (\n            <VideoContainer len={result.videos.results.length}>\n              {result.videos.results.map((video) => {\n                return (\n                  <Video>\n                    <iframe\n                      key={video.key}\n                      src={`https://www.youtube.com/embed/${video.key}`}\n                      frameBorder=\"0\"\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen\n                    ></iframe>\n                  </Video>\n                );\n              })}\n            </VideoContainer>\n          )}\n        </Data>\n      </Content>\n\n      {reviews && reviews.length !== 0 && (\n        <Reviews>\n          <BottomBorderedTitle>Reviews</BottomBorderedTitle>\n          {reviews &&\n            reviews.length > 0 &&\n            reviews.map((item) => {\n              return (\n                <>\n                  <Reviewer>- {item.author}</Reviewer>\n                  <ReviewContent>\" {item.content} \"</ReviewContent>\n                </>\n              );\n            })}\n        </Reviews>\n      )}\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.any,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nconst DetailContainer = (props) => {\n  const {\n    location: { pathname },\n  } = props;\n  const [isMovie, setIsMovie] = useState(pathname.includes(\"/movie/\"));\n  // states\n  const [result, setResult] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        match: {\n          params: { id },\n        },\n        history: { push },\n      } = props;\n      // const isMovie = pathname.includes(\"/movie/\");\n      const parsedId = parseInt(id);\n      if (isNaN(parsedId)) {\n        return push(\"/\");\n      }\n      let result = null;\n      try {\n        if (isMovie) {\n          ({ data: result } = await moviesApi.movieDetail(parsedId));\n          const {\n            data: { results: reviews },\n          } = await moviesApi.movieReviews(parsedId);\n          setReviews(reviews);\n          console.log(reviews);\n        } else {\n          ({ data: result } = await tvApi.showDetail(parsedId));\n        }\n      } catch {\n        setError(\"Cant find anything\");\n      } finally {\n        setLoading(false);\n        setResult(result);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return <DetailPresenter reviews={reviews} result={result} error={error} loading={loading} />;\n};\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nconst reactRouter = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv\" component={TV} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </Router>\n  );\n};\n\nexport default reactRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n       box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n};\n// 077990068b6dd97e94e25a6da056562a\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}